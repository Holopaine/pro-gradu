
@inbook{ardimento-2020,
  author = {Ardimento, Pasquale and Boffoli, Nicola and Mele, Costantino},
  year   = {2020},
  month  = {01},
  pages  = {63-83},
  title  = {A Text-Based Regression Approach to Predict Bug-Fix Time},
  isbn   = {978-3-030-36616-2},
  doi    = {10.1007/978-3-030-36617-9_5}
}

@article{GOMES201958,
  title    = {Bug report severity level prediction in open source software: A survey and research opportunities},
  journal  = {Information and Software Technology},
  volume   = {115},
  pages    = {58-78},
  year     = {2019},
  issn     = {0950-5849},
  doi      = {https://doi.org/10.1016/j.infsof.2019.07.009},
  url      = {https://www.sciencedirect.com/science/article/pii/S0950584919301648},
  author   = {Luiz Alberto Ferreira Gomes and Ricardo da Silva Torres and Mario Lúcio Côrtes},
  keywords = {Software maintenance, Bug tracking systems, Bug reports, Severity level prediction, Software repositories, Systematic mapping, Machine learning}
}

@inproceedings{Lamkanfi-2012,
  author    = {A. {Lamkanfi} and S. {Demeyer}},
  booktitle = {2012 16th European Conference on Software Maintenance and Reengineering},
  title     = {Filtering Bug Reports for Fix-Time Analysis},
  year      = {2012},
  volume    = {},
  number    = {},
  pages     = {379-384},
  keywords  = {data analysis;data mining;program debugging;bug report filtering;fix-time analysis;data mining algorithm;data quality;bug fix-time prediction experiment;Computer bugs;Accuracy;Software systems;Data mining;Fires;Open source software;Software Engineering;fix-time;bug reports;preprocessing;data mining},
  doi       = {10.1109/CSMR.2012.47},
  issn      = {1534-5351},
  month     = {03}
}

@inproceedings{ramarao-2016,
  author    = {P. {Ramarao} and K. {Muthukumaran} and S. {Dash} and N. L. {Bhanu Murthy}},
  booktitle = {2016 International Conference on Information Systems Engineering (ICISE)},
  title     = {Impact of Bug Reporter's Reputation on Bug-Fix Times},
  year      = {2016},
  pages     = {57-61},
  keywords  = {program debugging;program testing;software quality;bug reporter reputation;bug-fix times;software analytics;software engineering;bug prediction;software quality;Computer bugs;Predictive models;Prediction algorithms;Software;Data models;Estimation;Data mining;Bug-fix time;Similarity;Classification;Quartiles},
  doi       = {10.1109/ICISE.2016.18},
  issn      = {2160-1291},
  month     = {04},
  url       = {https://ieeexplore.ieee.org/document/7486274}
}


@inproceedings{riivo-2016,
  author    = {Kikas, Riivo and Dumas, Marlon and Pfahl, Dietmar},
  title     = {Using Dynamic and Contextual Features to Predict Issue Lifetime in GitHub Projects},
  year      = {2016},
  isbn      = {9781450341868},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2901739.2901751},
  doi       = {10.1145/2901739.2901751},
  booktitle = {Proceedings of the 13th International Conference on Mining Software Repositories},
  pages     = {291–302},
  numpages  = {12},
  keywords  = {issue tracking, mining software repositories, issue lifetime prediction},
  location  = {Austin, Texas},
  series    = {MSR '16}
}

@book{han-data_mining,
  author    = {Jiawei Han and Jian Pei and Micheline Kamber},
  isbn      = {9780123814791},
  publisher = {Morgan Kaufmann},
  series    = {The Morgan Kaufmann Series in Data Management Systems},
  title     = {Data Mining: Concepts and Techniques.},
  volume    = {3rd ed},
  url       = {http://search.ebscohost.com/login.aspx?direct=true&db=nlebk&AN=377411&site=ehost-live},
  year      = {2011}
}

@book{larose-learn_data_mining,
  author    = {Daniel T., Larose},
  isbn      = {9780471666578},
  publisher = {Wiley-Interscience},
  title     = {Discovering Knowledge in Data : An Introduction to Data Mining.},
  url       = {http://search.ebscohost.com/login.aspx?direct=true&db=nlebk&AN=127312&site=ehost-live},
  year      = {2005}
}

@online{clifton-2019,
  title     = {Data mining},
  url       = {https://www.britannica.com/technology/data-mining},
  journal   = {Encyclopædia Britannica},
  publisher = {Encyclopædia Britannica, inc.},
  author    = {Clifton, Christopher},
  year      = {2019},
  urldate   = {2021-03-01}
}

@article{guemes-pena-emerging_topics,
  author  = {Güemes-Peña, Diego and Nozal, Carlos and Sánchez, Raúl and Maudes, Jesús},
  year    = {2018},
  month   = {03},
  pages   = {},
  title   = {Emerging topics in mining software repositories: Machine learning in software repositories and datasets},
  volume  = {7},
  journal = {Progress in Artificial Intelligence},
  doi     = {10.1007/s13748-018-0147-7}
}

@inproceedings{Gousi13,
  author    = {Gousios, Georgios},
  title     = {The GHTorrent dataset and tool suite},
  booktitle = {Proceedings of the 10th Working Conference on Mining Software
    Repositories},
  series    = {MSR '13},
  year      = {2013},
  isbn      = {978-1-4673-2936-1},
  location  = {San Francisco, CA, USA},
  pages     = {233--236},
  numpages  = {4},
  url       = {http://dl.acm.org/citation.cfm?id=2487085.2487132},
  acmid     = {2487132},
  publisher = {IEEE Press},
  address   = {Piscataway, NJ, USA}
}

@inproceedings{hassan2008road,
  title        = {The road ahead for mining software repositories},
  author       = {Hassan, Ahmed E},
  booktitle    = {2008 Frontiers of Software Maintenance},
  pages        = {48--57},
  year         = {2008},
  organization = {IEEE}
}

@inproceedings{Giger-2010,
  author    = {Giger, Emanuel and Pinzger, Martin and Gall, Harald},
  title     = {Predicting the Fix Time of Bugs},
  year      = {2010},
  isbn      = {9781605589749},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1808920.1808933},
  doi       = {10.1145/1808920.1808933},
  abstract  = {Two important questions concerning the coordination of development effort are which bugs to fix first and how long it takes to fix them. In this paper we investigate empirically the relationships between bug report attributes and the time to fix. The objective is to compute prediction models that can be used to recommend whether a new bug should and will be fixed fast or will take more time for resolution. We examine in detail if attributes of a bug report can be used to build such a recommender system. We use decision tree analysis to compute and 10-fold cross validation to test prediction models. We explore prediction models in a series of empirical studies with bug report data of six systems of the three open source projects Eclipse, Mozilla, and Gnome. Results show that our models perform significantly better than random classification. For example, fast fixed Eclipse Platform bugs were classified correctly with a precision of 0.654 and a recall of 0.692. We also show that the inclusion of postsubmission bug report data of up to one month can further improve prediction models.},
  booktitle = {Proceedings of the 2nd International Workshop on Recommendation Systems for Software Engineering},
  pages     = {52–56},
  numpages  = {5},
  location  = {Cape Town, South Africa},
  series    = {RSSE '10}
}

@inproceedings{Bhattacharya-2011,
  author    = {Bhattacharya, Pamela and Neamtiu, Iulian},
  title     = {Bug-Fix Time Prediction Models: Can We Do Better?},
  year      = {2011},
  isbn      = {9781450305747},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1985441.1985472},
  doi       = {10.1145/1985441.1985472},
  pages     = {207–210},
  numpages  = {4},
  keywords  = {issue tracking, bug report triage, statistical model, bug-fix time},
  location  = {Waikiki, Honolulu, HI, USA},
  series    = {MSR '11}
}

@inproceedings{Guo-2010,
  author    = {Guo, Philip J. and Zimmermann, Thomas and Nagappan, Nachiappan and Murphy, Brendan},
  title     = {Characterizing and Predicting Which Bugs Get Fixed: An Empirical Study of Microsoft Windows},
  year      = {2010},
  isbn      = {9781605587196},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1806799.1806871},
  doi       = {10.1145/1806799.1806871},
  booktitle = {Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - Volume 1},
  pages     = {495–504},
  numpages  = {10},
  location  = {Cape Town, South Africa},
  series    = {ICSE '10}
}

@inproceedings{Marks-2011,
  author    = {Marks, Lionel and Zou, Ying and Hassan, Ahmed E.},
  title     = {Studying the Fix-Time for Bugs in Large Open Source Projects},
  year      = {2011},
  isbn      = {9781450307093},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2020390.2020401},
  doi       = {10.1145/2020390.2020401},
  booktitle = {Proceedings of the 7th International Conference on Predictive Models in Software Engineering},
  articleno = {11},
  numpages  = {8},
  keywords  = {bug fix-time, mining software repositories, empirical software engineering},
  location  = {Banff, Alberta, Canada},
  series    = {Promise '11}
}

@inproceedings{Zhang-2013,
  author    = {Zhang, Hongyu and Gong, Liang and Versteeg, Steve},
  title     = {Predicting Bug-Fixing Time: An Empirical Study of Commercial Software Projects},
  year      = {2013},
  isbn      = {9781467330763},
  publisher = {IEEE Press},
  url       = {https://dl.acm.org/doi/10.5555/2486788.2486931},
  abstract  = { For a large and evolving software system, the project team could receive many bug reports over a long period of time. It is important to achieve a quantitative understanding of bug-fixing time. The ability to predict bug-fixing time can help a project team better estimate software maintenance efforts and better manage software projects. In this paper, we perform an empirical study of bug-fixing time for three CA Technologies projects. We propose a Markov-based method for predicting the number of bugs that will be fixed in future. For a given number of defects, we propose a method for estimating the total amount of time required to fix them based on the empirical distribution of bug-fixing time derived from historical data. For a given bug report, we can also construct a classification model to predict slow or quick fix (e.g., below or above a time threshold). We evaluate our methods using real maintenance data from three CA Technologies projects. The results show that the proposed methods are effective. },
  booktitle = {Proceedings of the 2013 International Conference on Software Engineering},
  pages     = {1042–1051},
  numpages  = {10},
  location  = {San Francisco, CA, USA},
  series    = {ICSE '13}
}

@inproceedings{Pfahl-2016,
  author    = {Pfahl, Dietmar and Karus, Siim and Stavnycha, Myroslava},
  title     = {Improving Expert Prediction of Issue Resolution Time},
  year      = {2016},
  isbn      = {9781450336918},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2915970.2916004},
  doi       = {10.1145/2915970.2916004},
  booktitle = {Proceedings of the 20th International Conference on Evaluation and Assessment in Software Engineering},
  articleno = {42},
  numpages  = {6},
  keywords  = {ordered logistic regression, k-means, k-nearest neighbors, na\"{\i}ve bayes classifier, resolution time, issue report, machine learning, random forest, expert prediction, latent semantic analysis},
  location  = {Limerick, Ireland},
  series    = {EASE '16}
}

@inproceedings{Porru-2016,
  author    = {Porru, Simone and Murgia, Alessandro and Demeyer, Serge and Marchesi, Michele and Tonelli, Roberto},
  title     = {Estimating Story Points from Issue Reports},
  year      = {2016},
  isbn      = {9781450347723},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2972958.2972959},
  doi       = {10.1145/2972958.2972959},
  booktitle = {Proceedings of the The 12th International Conference on Predictive Models and Data Analytics in Software Engineering},
  articleno = {2},
  numpages  = {10},
  keywords  = {issue report, agile, Machine learning, story points},
  location  = {Ciudad Real, Spain},
  series    = {PROMISE 2016}
}

@inproceedings{Ardimento-2017,
  author    = {Ardimento, Pasquale and Dinapoli, Andrea},
  title     = {Knowledge Extraction from On-Line Open Source Bug Tracking Systems to Predict Bug-Fixing Time},
  year      = {2017},
  isbn      = {9781450352253},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3102254.3102275},
  doi       = {10.1145/3102254.3102275},
  booktitle = {Proceedings of the 7th International Conference on Web Intelligence, Mining and Semantics},
  articleno = {7},
  numpages  = {9},
  keywords  = {bug-fix time prediction, text categorization, support vector machine (SVM), bug triage, supervised learning},
  location  = {Amantea, Italy},
  series    = {WIMS '17}
}

@inproceedings{Al-Zubaidi-2017,
  author    = {Al-Zubaidi, Wisam Haitham Abbood and Dam, Hoa Khanh and Ghose, Aditya and Li, Xiaodong},
  title     = {Multi-Objective Search-Based Approach to Estimate Issue Resolution Time},
  year      = {2017},
  isbn      = {9781450353052},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3127005.3127011},
  doi       = {10.1145/3127005.3127011},
  booktitle = {Proceedings of the 13th International Conference on Predictive Models and Data Analytics in Software Engineering},
  pages     = {53–62},
  numpages  = {10},
  location  = {Toronto, Canada},
  series    = {PROMISE}
}

@inproceedings{Scott-2018,
  author    = {Scott, Ezequiel and Pfahl, Dietmar},
  title     = {Using Developers' Features to Estimate Story Points},
  year      = {2018},
  isbn      = {9781450364591},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3202710.3203160},
  doi       = {10.1145/3202710.3203160},
  booktitle = {Proceedings of the 2018 International Conference on Software and System Process},
  pages     = {106–110},
  numpages  = {5},
  keywords  = {machine learning, agile software development, effort estimation},
  location  = {Gothenburg, Sweden},
  series    = {ICSSP '18}
}

@inproceedings{Ardimento-2016,
  author = {Ardimento, Pasquale and Bilancia, Massimo and Monopoli, Stefano},
  year   = {2016},
  month  = {10},
  pages  = {167-182},
  title  = {Predicting Bug-Fix Time: Using Standard Versus Topic-Based Text Categorization Techniques},
  isbn   = {978-3-319-46306-3},
  doi    = {10.1007/978-3-319-46307-0_11},
  uri    = {https://link.springer.com/chapter/10.1007%2F978-3-319-46307-0_11}
}

@article{Sharma-2019,
  author  = {Sharma, Meera and Kumari, Madhu and Singh, V.},
  year    = {2019},
  month   = {09},
  pages   = {},
  title   = {Multi-attribute dependent bug severity and fix time prediction modeling},
  volume  = {10},
  journal = {International Journal of System Assurance Engineering and Management},
  doi     = {10.1007/s13198-019-00888-5}
}

@article{Lee-2020,
  author   = {Y. {Lee} and S. {Lee} and C. {Lee} and I. {Yeom} and H. {Woo}},
  journal  = {IEEE Access},
  title    = {Continual Prediction of Bug-Fix Time Using Deep Learning-Based Activity Stream Embedding},
  year     = {2020},
  volume   = {8},
  number   = {},
  pages    = {10503-10515},
  keywords = {learning (artificial intelligence);program debugging;public domain software;system monitoring;software development project;continuous estimation;posterior estimation;bug-fix time prediction;bug-related activities;bug tracking system change;bug reports;bug tracking system datasets;log streams;continual prediction;resource management;logging data;deep learning-based activity stream embedding model;merged network;contextual feature extraction;sequence network;open source projects;Eclipse;Chromium;Firefox dataset;DASENet model;Computer bugs;Feature extraction;Task analysis;Deep learning;Software;Hidden Markov models;Chromium;Bug-fix time;activity stream;bug tracking system;deep learning;activity embedding;sequence learning model},
  doi      = {10.1109/ACCESS.2020.2965627},
  uri      = {https://ieeexplore.ieee.org/document/8955829},
  issn     = {2169-3536},
  month    = {}
}
@inproceedings{Anh-2011,
  author    = {Duc Anh, Nguyen and Cruzes, Daniela S. and Conradi, Reidar and Ayala, Claudia},
  title     = {Empirical Validation of Human Factors in Predicting Issue Lead Time in Open Source Projects},
  year      = {2011},
  isbn      = {9781450307093},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2020390.2020403},
  doi       = {10.1145/2020390.2020403},
  booktitle = {Proceedings of the 7th International Conference on Predictive Models in Software Engineering},
  articleno = {13},
  numpages  = {10},
  keywords  = {empirical study, classification model, issue resolution time, regression model, bug prediction, issue lead time, bug triage, bug lead time},
  location  = {Banff, Alberta, Canada},
  series    = {Promise '11}
}

@inproceedings{Lamkanfi-2012,
  author    = {A. {Lamkanfi} and S. {Demeyer}},
  booktitle = {2012 16th European Conference on Software Maintenance and Reengineering},
  title     = {Filtering Bug Reports for Fix-Time Analysis},
  year      = {2012},
  volume    = {},
  number    = {},
  pages     = {379-384},
  keywords  = {data analysis;data mining;program debugging;bug report filtering;fix-time analysis;data mining algorithm;data quality;bug fix-time prediction experiment;Computer bugs;Accuracy;Software systems;Data mining;Fires;Open source software;Software Engineering;fix-time;bug reports;preprocessing;data mining},
  doi       = {10.1109/CSMR.2012.47},
  issn      = {1534-5351},
  uri       = {https://ieeexplore.ieee.org/document/6178883},
  month     = {March}
}

@inproceedings{Pombo-2020,
  author    = {N. {Pombo} and R. {Teixeira}},
  booktitle = {2020 IEEE 14th International Conference on Application of Information and Communication Technologies (AICT)},
  title     = {Contribution of Temporal Sequence Activities To Predict Bug Fixing Time},
  year      = {2020},
  volume    = {},
  number    = {},
  pages     = {1-6},
  doi       = {10.1109/AICT50176.2020.9368603}
}

@article{Habayeb-2018,
  author   = {M. {Habayeb} and S. S. {Murtaza} and A. {Miranskyy} and A. B. {Bener}},
  journal  = {IEEE Transactions on Software Engineering},
  title    = {On the Use of Hidden Markov Model to Predict the Time to Fix Bugs},
  year     = {2018},
  volume   = {44},
  number   = {12},
  pages    = {1224-1244},
  keywords = {hidden Markov models;program debugging;public domain software;software maintenance;software quality;bug report;fix bugs;hidden Markov model;time prediction;temporal sequences;Firefox project;Computer bugs;Hidden Markov models;Predictive models;Software quality;Data science;Stochastic processes;Bug repositories;temporal activities;time to fix a bug;hidden markov model},
  doi      = {10.1109/TSE.2017.2757480},
  issn     = {1939-3520},
  month    = {Dec}
}

@article{Shaikh-2017,
  title   = {Governing open source software through coordination processes},
  journal = {Information and Organization},
  volume  = {27},
  number  = {2},
  pages   = {116-135},
  year    = {2017},
  issn    = {1471-7727},
  doi     = {https://doi.org/10.1016/j.infoandorg.2017.04.001},
  url     = {https://www.sciencedirect.com/science/article/pii/S1471772716301816},
  author  = {Maha Shaikh and Ola Henfridsson}
}

 @inbook{Lakhani-2005,
  place     = {Cambridge, MA},
  title     = {Why Hackers Do What They Do: Understanding Motivation and Effort in Free/Open Source Software Projects},
  booktitle = {Perspectives on free and open source software},
  publisher = {MIT Press},
  author    = {Lakhani, Karim and Wolf, Robert},
  editor    = {Feller, Joseph and Lakhani, Karim R and Hissam, Scott A and Fitzgerald, Brian},
  year      = {2005},
  url       = {http://search.ebscohost.com/login.aspx?direct=true&scope=site&db=nlebk&AN=138469}
} 

@article{Laat-2007,
  author  = {de Laat, Paul},
  year    = {2007},
  month   = {02},
  pages   = {165-177},
  title   = {Governance of open source software: State of the Art},
  volume  = {11},
  journal = {Journal of Management and Governance},
  doi     = {10.1007/s10997-007-9022-9}
}

@article{Wang-2015,
  author  = {Wang, Jing and Shih, Patrick and Wu, Yu and Carroll, John},
  year    = {2015},
  month   = {11},
  pages   = {1-12},
  title   = {Comparative case studies of open source software peer review practices},
  volume  = {67},
  journal = {Information and Software Technology},
  doi     = {10.1016/j.infsof.2015.06.002}
}

@online{Osd,
  title     = {The Open Source Definition},
  author    = {{Open Source Initiative}},
  url       = {https://opensource.org/osd},
  journal   = {The Open Source Definition | Open Source Initiative},
  publisher = {Open Source Initiative},
  year      = {2007},
  month     = {Mar},
  urldate   = {2021-06-05}
}

@article{Corbly-2014,
  author  = {Corbly, James},
  year    = {2014},
  month   = {09},
  pages   = {},
  title   = {The Free Software Alternative: Freeware, Open Source Software, and Libraries},
  volume  = {33},
  journal = {Information Technology and Libraries},
  doi     = {10.6017/ital.v33i3.5105}
}

@online{Whitesource-2021,
  title     = {Open Source Licenses in 2021: Trends and Predictions},
  author    = {Johnson, Patricia},
  url       = {https://www.whitesourcesoftware.com/resources/blog/open-source-licenses-trends-and-predictions/},
  publisher = {WhiteSource},
  year      = {2021},
  month     = {1},
  day       = {28},
  urldate   = {2021-06-19}
}

@article{Conlon-2007,
  title   = {An examination of initiation, organization, participation, leadership, and control of successful Open Source software development projects},
  author  = {Conlon, Michael P},
  journal = {Information Systems Education Journal},
  volume  = {5},
  number  = {38},
  pages   = {1--13},
  year    = {2007}
}

@article{Nyman-2013,
  title   = {Code forking, governance, and sustainability in open source software},
  author  = {Nyman, Linus and Lindman, Juho},
  journal = {Technology Innovation Management Review},
  volume  = {3},
  number  = {1},
  year    = {2013}
}

@book{Laurent-2004,
  title     = {Understanding open source and free software licensing: guide to navigating licensing issues in existing \& new software},
  author    = {Laurent, Andrew M St},
  year      = {2004},
  publisher = {" O'Reilly Media, Inc."}
}

@article{Viseur-2012,
  author  = {Viseur, Robert},
  year    = {2012},
  month   = {02},
  pages   = {},
  title   = {Forks impacts and motivations in free and open source projects},
  volume  = {3},
  journal = {International Journal of Advanced Computer Science and Applications - IJACSA},
  doi     = {10.14569/IJACSA.2012.030221}
}

@article{Sharma-2002,
  author   = {Sharma, Srinarayan and Sugumaran, Vijayan and Rajagopalan, Balaji},
  title    = {A framework for creating hybrid-open source software communities},
  journal  = {Information Systems Journal},
  volume   = {12},
  number   = {1},
  pages    = {7-25},
  keywords = {open source software, software development, hybrid-OSS community, OSS framework, features of OSS},
  doi      = {https://doi.org/10.1046/j.1365-2575.2002.00116.x},
  url      = {https://onlinelibrary.wiley.com/doi/abs/10.1046/j.1365-2575.2002.00116.x},
  eprint   = {https://onlinelibrary.wiley.com/doi/pdf/10.1046/j.1365-2575.2002.00116.x},
  year     = {2002}
}

@inbook{Riehle-2015,
  author    = {Riehle, Dirk},
  editor    = {Li, Wei
               and Huhns, Michael N.
               and Tsai, Wei-Tek
               and Wu, Wenjun},
  title     = {The Five Stages of Open Source Volunteering},
  booktitle = {Crowdsourcing: Cloud-Based Software Development},
  year      = {2015},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {25--38},
  abstract  = {Today's software systems build on open source software. Thus, we need to understand how to successfully create, nurture, and mature the software development communities of these open source projects. In this article, we review and discuss best practices of the open source volunteering and recruitment process that successful project leaders are using to lead their projects to success. We combine the perspective of the volunteer, looking at a project, with the perspective of a project leader, looking to find additional volunteers for the project. We identify a five-stage process consisting of a connecting, understanding, engaging, performing, and leading stage. The underlying best practices, when applied, significantly increase the chance of an open source project being successful.},
  isbn      = {978-3-662-47011-4},
  doi       = {10.1007/978-3-662-47011-4_2},
  url       = {https://doi.org/10.1007/978-3-662-47011-4_2}
}

@inproceedings{Rigby-2008,
  author    = {Rigby, Peter and German, Daniel and Storey, Margaret-Anne},
  booktitle = {2008 ACM/IEEE 30th International Conference on Software Engineering},
  title     = {Open source software peer review practices},
  year      = {2008},
  volume    = {},
  number    = {},
  pages     = {541-550},
  doi       = {10.1145/1368088.1368162}
}

@article{Mockus-2002,
  author     = {Mockus, Audris and Fielding, Roy T. and Herbsleb, James D.},
  title      = {Two Case Studies of Open Source Software Development: Apache and Mozilla},
  year       = {2002},
  issue_date = {July 2002},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {11},
  number     = {3},
  issn       = {1049-331X},
  url        = {https://doi.org/10.1145/567793.567795},
  doi        = {10.1145/567793.567795},
  journal    = {ACM Trans. Softw. Eng. Methodol.},
  month      = jul,
  pages      = {309–346},
  numpages   = {38},
  keywords   = {repair interval, Open source software, code ownership, defect density, Apache, Mozilla}
}

@article{Aberdour-2007,
  author  = {Aberdour, Mark},
  journal = {IEEE Software},
  title   = {Achieving Quality in Open-Source Software},
  year    = {2007},
  volume  = {24},
  number  = {1},
  pages   = {58-64},
  doi     = {10.1109/MS.2007.2}
}